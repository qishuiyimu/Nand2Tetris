// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    //// Replace this comment with your code.
    Not(in=sel[2] , out=notsel2 );
    And(a=in , b=notsel2 , out=inabcd );
    And(a=in , b=sel[2] , out=inefgh );
    Not(in=sel[1] , out=notsel1 );
    And(a=inabcd , b=notsel1 , out=inab );
    And(a=inabcd , b=sel[1] , out=incd );
    DMux(in=inab , sel=sel[0] , a=a , b=b );
    DMux(in=incd , sel=sel[0] , a=c , b=d );

    And(a=inefgh , b=notsel1 , out=inef );
    And(a=inefgh , b=sel[1] , out=ingh );
    DMux(in=inef , sel=sel[0] , a=e , b=f );
    DMux(in=ingh , sel=sel[0] , a=g , b=h );
}